{"ast":null,"code":"/*!\n * pretty <https://github.com/jonschlinkert/pretty>\n *\n * Copyright (c) 2013-2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar beautify = require('js-beautify');\nvar condense = require('condense-newlines');\nvar extend = require('extend-shallow');\nvar defaults = {\n  unformatted: ['code', 'pre', 'em', 'strong', 'span'],\n  indent_inner_html: true,\n  indent_char: ' ',\n  indent_size: 2,\n  sep: '\\n'\n};\nmodule.exports = function pretty(str, options) {\n  var opts = extend({}, defaults, options);\n  str = beautify.html(str, opts);\n  if (opts.ocd === true) {\n    if (opts.newlines) opts.sep = opts.newlines;\n    return ocd(str, opts);\n  }\n  return str;\n};\nfunction ocd(str, options) {\n  // Normalize and condense all newlines\n  return condense(str, options)\n  // Remove empty whitespace the top of a file.\n  .replace(/^\\s+/g, '')\n  // Remove extra whitespace from eof\n  .replace(/\\s+$/g, '\\n')\n\n  // Add a space above each comment\n  .replace(/(\\s*<!--)/g, '\\n$1')\n  // Bring closing comments up to the same line as closing tag.\n  .replace(/>(\\s*)(?=<!--\\s*\\/)/g, '> ');\n}","map":{"version":3,"names":["beautify","require","condense","extend","defaults","unformatted","indent_inner_html","indent_char","indent_size","sep","module","exports","pretty","str","options","opts","html","ocd","newlines","replace"],"sources":["E:/Programing/JavaScript/FrontEnd Mentor Projects/sign-up-form/node_modules/pretty/index.js"],"sourcesContent":["/*!\n * pretty <https://github.com/jonschlinkert/pretty>\n *\n * Copyright (c) 2013-2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar beautify = require('js-beautify');\nvar condense = require('condense-newlines');\nvar extend = require('extend-shallow');\nvar defaults = {\n  unformatted: ['code', 'pre', 'em', 'strong', 'span'],\n  indent_inner_html: true,\n  indent_char: ' ',\n  indent_size: 2,\n  sep: '\\n'\n};\n\nmodule.exports = function pretty(str, options) {\n  var opts = extend({}, defaults, options);\n  str = beautify.html(str, opts);\n\n  if (opts.ocd === true) {\n    if (opts.newlines) opts.sep = opts.newlines;\n    return ocd(str, opts);\n  }\n\n  return str;\n};\n\nfunction ocd(str, options) {\n  // Normalize and condense all newlines\n  return condense(str, options)\n    // Remove empty whitespace the top of a file.\n    .replace(/^\\s+/g, '')\n    // Remove extra whitespace from eof\n    .replace(/\\s+$/g, '\\n')\n\n    // Add a space above each comment\n    .replace(/(\\s*<!--)/g, '\\n$1')\n    // Bring closing comments up to the same line as closing tag.\n    .replace(/>(\\s*)(?=<!--\\s*\\/)/g, '> ');\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;AACrC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAC3C,IAAIE,MAAM,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AACtC,IAAIG,QAAQ,GAAG;EACbC,WAAW,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC;EACpDC,iBAAiB,EAAE,IAAI;EACvBC,WAAW,EAAE,GAAG;EAChBC,WAAW,EAAE,CAAC;EACdC,GAAG,EAAE;AACP,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG,SAASC,MAAMA,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC7C,IAAIC,IAAI,GAAGZ,MAAM,CAAC,CAAC,CAAC,EAAEC,QAAQ,EAAEU,OAAO,CAAC;EACxCD,GAAG,GAAGb,QAAQ,CAACgB,IAAI,CAACH,GAAG,EAAEE,IAAI,CAAC;EAE9B,IAAIA,IAAI,CAACE,GAAG,KAAK,IAAI,EAAE;IACrB,IAAIF,IAAI,CAACG,QAAQ,EAAEH,IAAI,CAACN,GAAG,GAAGM,IAAI,CAACG,QAAQ;IAC3C,OAAOD,GAAG,CAACJ,GAAG,EAAEE,IAAI,CAAC;EACvB;EAEA,OAAOF,GAAG;AACZ,CAAC;AAED,SAASI,GAAGA,CAACJ,GAAG,EAAEC,OAAO,EAAE;EACzB;EACA,OAAOZ,QAAQ,CAACW,GAAG,EAAEC,OAAO;EAC1B;EAAA,CACCK,OAAO,CAAC,OAAO,EAAE,EAAE;EACpB;EAAA,CACCA,OAAO,CAAC,OAAO,EAAE,IAAI;;EAEtB;EAAA,CACCA,OAAO,CAAC,YAAY,EAAE,MAAM;EAC7B;EAAA,CACCA,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC;AAC1C"},"metadata":{},"sourceType":"script","externalDependencies":[]}